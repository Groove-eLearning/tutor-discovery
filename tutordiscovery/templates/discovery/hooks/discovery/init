make migrate

# Production partner
./manage.py create_or_update_partner  \
  --site-domain {{ DISCOVERY_HOST }} \
  --code openedx --name "Open edX" \
  --lms-url="http://lms:8000" \
  --studio-url="http://cms:8000" \
  --courses-api-url "{% if ENABLE_HTTPS %}https{% else %}http{% endif %}://{{ LMS_HOST }}/api/courses/v1/" \
  --organizations-api-url "{% if ENABLE_HTTPS %}https{% else %}http{% endif %}://{{ LMS_HOST }}/api/organizations/v1/"

{% if DEV_MODE is defined and DEV_MODE %}
# Development partners
./manage.py create_or_update_partner  \
  --site-domain {{ DISCOVERY_HOST }}:8381 \
  --code dev --name "Open edX - development" \
  --lms-url="http://lms:8000" \
  --studio-url="http://cms:8000" \
  --courses-api-url "http://{{ LMS_HOST }}:8000/api/courses/v1/" \
  --organizations-api-url "http://{{ LMS_HOST }}:8000/api/organizations/v1/"
{% endif %}

./manage.py refresh_course_metadata --partner_code=openedx
./manage.py update_index --disable-change-limit

./manage.py shell -c "
from django.contrib.auth import get_user_model
from django.contrib.auth.models import Group
from course_discovery.apps.publisher.constants import PUBLISHER_GROUP_NAME

try:
  user, _ = get_user_model().objects.get_or_create(
    username='lms_catalog_service_user',
    defaults={'email': 'lms_catalog_service_user@{{ LMS_HOST }}'}
  )
  user.groups.add(Group.objects.get(name=PUBLISHER_GROUP_NAME))
except:
  print('User lms_catalog_service_user is existed')"
